// Mountains. By David Hoskins - 2013
// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.

#version 450 core

#include "../src/terrain_interface.h"

#define WIDTH 1080
#define HEIGHT 720
#define WORKGROUP_SIZE 32
layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;
layout(push_constant) uniform frame_data_t
{
	mat4 view;
	vec4 position;
	vec2 screen_size;
} frame_data;

layout(set = 0, binding = 0, rgba8) uniform image2D image; 



//--------------------------------------------------------------------------
void main(void)
{
	if (gl_GlobalInvocationID.x >= WIDTH || gl_GlobalInvocationID.y >= HEIGHT)
		return;

	const float deg_to_rad = 3.1415 / 180.0;
	const float fov = 90.0;	// In degrees
	float px = (2 * ((gl_GlobalInvocationID.x + 0.5) / frame_data.screen_size.x) - 1) * tan(fov / 2.0 * deg_to_rad);
	float py = (2 * ((gl_GlobalInvocationID.y + 0.5) / frame_data.screen_size.y) - 1) * tan(fov / 2.0 * deg_to_rad) * frame_data.screen_size.y / frame_data.screen_size.x;
	vec3 rd = vec3(px, py, 1);
	rd = (frame_data.view * vec4(normalize(rd), 0.0)).xyz;

	vec3 position = frame_data.position.xyz;

	vec3 color = calc_ray_color(position, rd);

	imageStore(image, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
}

